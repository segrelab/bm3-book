Traceback (most recent call last):
  File "/Users/helenscott/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/helenscott/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/helenscott/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/helenscott/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/helenscott/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/Users/helenscott/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/helenscott/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/helenscott/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig = plot_topology(
    txtl_composite1, 
    filename='hierarchy_topology_2.pdf', 
    **hierarchy_topology_plot_config2)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn [28], line 1[0m
[0;32m----> 1[0m fig [38;5;241m=[39m [43mplot_topology[49m[43m([49m
[1;32m      2[0m [43m    [49m[43mtxtl_composite1[49m[43m,[49m[43m [49m
[1;32m      3[0m [43m    [49m[43mfilename[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mhierarchy_topology_2.pdf[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m
[1;32m      4[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mhierarchy_topology_plot_config2[49m[43m)[49m

File [0;32m~/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/vivarium/plots/topology.py:492[0m, in [0;36mplot_topology[0;34m(composite, settings, out_dir, filename)[0m
[1;32m    490[0m [38;5;66;03m# make networkx graph[39;00m
[1;32m    491[0m remove_nodes [38;5;241m=[39m settings[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124mremove_nodes[39m[38;5;124m'[39m, [])
[0;32m--> 492[0m g, place_edges [38;5;241m=[39m [43mget_networkx_graph[49m[43m([49m[43mcomposite[49m[43m,[49m[43m [49m[43mremove_nodes[49m[43m)[49m
[1;32m    493[0m settings[[38;5;124m'[39m[38;5;124mplace_edges[39m[38;5;124m'[39m] [38;5;241m=[39m place_edges
[1;32m    495[0m [38;5;66;03m# make graph figure[39;00m

File [0;32m~/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/vivarium/plots/topology.py:176[0m, in [0;36mget_networkx_graph[0;34m(composite, remove_nodes)[0m
[1;32m    173[0m remove_nodes [38;5;241m=[39m remove_nodes [38;5;129;01mor[39;00m []
[1;32m    175[0m [38;5;66;03m# get the nodes and edges from the composite[39;00m
[0;32m--> 176[0m process_nodes, store_nodes, edges, place_edges [38;5;241m=[39m [43mget_bigraph[49m[43m([49m[43mcomposite[49m[43m)[49m
[1;32m    178[0m [38;5;66;03m# remove specified nodes[39;00m
[1;32m    179[0m process_nodes [38;5;241m=[39m remove(remove_nodes, node_list[38;5;241m=[39mprocess_nodes)

File [0;32m~/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/vivarium/plots/topology.py:64[0m, in [0;36mget_bigraph[0;34m(composite)[0m
[1;32m     62[0m processes [38;5;241m=[39m composite[[38;5;124m'[39m[38;5;124mprocesses[39m[38;5;124m'[39m]
[1;32m     63[0m steps [38;5;241m=[39m composite[[38;5;124m'[39m[38;5;124msteps[39m[38;5;124m'[39m]
[0;32m---> 64[0m hierarchy_object [38;5;241m=[39m [43mgenerate_state[49m[43m([49m
[1;32m     65[0m [43m    [49m[43mprocesses[49m[38;5;241;43m=[39;49m[43mprocesses[49m[43m,[49m
[1;32m     66[0m [43m    [49m[43mtopology[49m[38;5;241;43m=[39;49m[43mtopology[49m[43m,[49m
[1;32m     67[0m [43m    [49m[43minitial_state[49m[38;5;241;43m=[39;49m[43m{[49m[43m}[49m[43m,[49m
[1;32m     68[0m [43m    [49m[43msteps[49m[38;5;241;43m=[39;49m[43msteps[49m[43m)[49m
[1;32m     70[0m [38;5;66;03m# get path to processes and stores, name them by their paths[39;00m
[1;32m     71[0m [38;5;66;03m# leaf_paths = hierarchy_object.depth(filter_function=lambda x: x.inner == {})[39;00m
[1;32m     72[0m process_paths [38;5;241m=[39m hierarchy_object[38;5;241m.[39mdepth(filter_function[38;5;241m=[39m[38;5;28;01mlambda[39;00m x: [38;5;28misinstance[39m(x[38;5;241m.[39mvalue, Process))

File [0;32m~/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/vivarium/core/store.py:49[0m, in [0;36mgenerate_state[0;34m(processes, topology, initial_state, steps, flow)[0m
[1;32m     47[0m store [38;5;241m=[39m Store({})
[1;32m     48[0m steps [38;5;241m=[39m steps [38;5;129;01mor[39;00m {}
[0;32m---> 49[0m [43mstore[49m[38;5;241;43m.[39;49m[43mgenerate[49m[43m([49m[38;5;28;43mtuple[39;49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mprocesses[49m[43m,[49m[43m [49m[43msteps[49m[43m,[49m[43m [49m[43mflow[49m[43m,[49m[43m [49m[43mtopology[49m[43m,[49m[43m [49m[43minitial_state[49m[43m)[49m
[1;32m     50[0m store[38;5;241m.[39mbuild_topology_views()
[1;32m     52[0m [38;5;28;01mreturn[39;00m store

File [0;32m~/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/vivarium/core/store.py:2000[0m, in [0;36mStore.generate[0;34m(self, path, processes, steps, flow, topology, initial_state)[0m
[1;32m   1992[0m [38;5;124;03m"""[39;00m
[1;32m   1993[0m [38;5;124;03mGenerate a subtree of this store at the given path.[39;00m
[1;32m   1994[0m [38;5;124;03mThe processes will be mapped into locations in the tree by the[39;00m
[1;32m   1995[0m [38;5;124;03mtopology, and once everything is constructed the initial_state[39;00m
[1;32m   1996[0m [38;5;124;03mwill be applied.[39;00m
[1;32m   1997[0m [38;5;124;03m"""[39;00m
[1;32m   1999[0m target [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_establish_path(path, {})
[0;32m-> 2000[0m [43mtarget[49m[38;5;241;43m.[39;49m[43m_generate_paths[49m[43m([49m[43mprocesses[49m[43m,[49m[43m [49m[43mflow[49m[43m,[49m[43m [49m[43mtopology[49m[43m)[49m
[1;32m   2001[0m target[38;5;241m.[39m_generate_paths(steps, flow, topology)
[1;32m   2002[0m target[38;5;241m.[39m_apply_subschemas()

File [0;32m~/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/vivarium/core/store.py:1975[0m, in [0;36mStore._generate_paths[0;34m(self, processes, flow, topology)[0m
[1;32m   1973[0m [38;5;28;01mif[39;00m key [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39minner:
[1;32m   1974[0m     [38;5;28mself[39m[38;5;241m.[39minner[key] [38;5;241m=[39m Store({}, outer[38;5;241m=[39m[38;5;28mself[39m)
[0;32m-> 1975[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43minner[49m[43m[[49m[43mkey[49m[43m][49m[38;5;241;43m.[39;49m[43m_generate_paths[49m[43m([49m
[1;32m   1976[0m [43m    [49m[43msubprocess[49m[43m,[49m
[1;32m   1977[0m [43m    [49m[43msubflow[49m[43m,[49m
[1;32m   1978[0m [43m    [49m[43msubtopology[49m[43m,[49m
[1;32m   1979[0m [43m[49m[43m)[49m

File [0;32m~/opt/miniconda3/envs/bm3-book-dev/lib/python3.10/site-packages/vivarium/core/store.py:1951[0m, in [0;36mStore._generate_paths[0;34m(self, processes, flow, topology)[0m
[1;32m   1929[0m [38;5;124;03m"""Set up state :term:`hierarchy` with stores.[39;00m
[1;32m   1930[0m 
[1;32m   1931[0m [38;5;124;03mRecursively creates the entire state hierarchy rooted at[39;00m
[0;32m   (...)[0m
[1;32m   1948[0m [38;5;124;03m    topology: The topology.[39;00m
[1;32m   1949[0m [38;5;124;03m"""[39;00m
[1;32m   1950[0m [38;5;28;01mfor[39;00m key, subprocess [38;5;129;01min[39;00m processes[38;5;241m.[39mitems():
[0;32m-> 1951[0m     subtopology [38;5;241m=[39m [43mtopology[49m[43m[[49m[43mkey[49m[43m][49m
[1;32m   1952[0m     subflow [38;5;241m=[39m flow[38;5;241m.[39mget(key) [38;5;28;01mif[39;00m flow [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m
[1;32m   1953[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(subprocess, Process):

[0;31mKeyError[0m: '0'
KeyError: '0'

